<?php
/*
 * Constants
 */
 
define("cWebMoneyPayActionUrl" ,"https://merchant.webmoney.ru/lmi/payment.asp");
define("cWebMoneyRateUrl"      ,"https://wm.exchanger.ru/asp/XMLbestRates.asp");

/**
 * Implemens hook_theme()

function pg_webmoney_theme() {
   return array(
    'pg_webmoney_list' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}
 */

/**
 * Implemens hook_menu()
 */

function pg_webmoney_menu() {

  $items['webmoney/done'] = array(
      'title'           => 'Internal Data',
      'page callback'   => 'pg_webmoney_done_payment',
      'access callback' => TRUE,
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_CALLBACK
  );
  $items['webmoney/success'] = array(
      'title'           => 'Webmoney processing',
      'page callback'   => 'pg_webmoney_payment_end',
      'page arguments'  => array('success'),
      'access callback' => TRUE,
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_CALLBACK
  );
  $items['webmoney/fail'] = array(
      'title'           => 'Webmoney processing',
      'page callback'   => 'pg_webmoney_payment_end',
      'page arguments'  => array('fail'),
      'access callback' => TRUE,
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_CALLBACK
  );
  $items['admin/config/pgapi/gateway_settings/webmoney'] = array(
      'title'           => 'Webmoney',
      'description'     => 'Webmoney payment settings.',
      'page callback'   => 'drupal_get_form',
      'page arguments'  => array('pg_webmoney_list'),
      'access callback' => 'user_access',
      'access arguments' => array('administer pgapi'),
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_LOCAL_TASK,
  );
  $items['admin/config/pgapi/gateway_settings/webmoney/list'] = array(
      'title'           => 'Purses',
      'page callback'   => 'drupal_get_form',
      'page arguments'  => array('pg_webmoney_list'),
      'access callback' => 'user_access',
      'access arguments' => array('administer pgapi'),
      'weight'          => 1,
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/config/pgapi/gateway_settings/webmoney/add'] = array(
      'title'           => 'Add Purse',
      'page callback'   => 'drupal_get_form',
      'page arguments'  => array('pg_webmoney_add'),
      'access callback' => 'user_access',
      'access arguments' => array('administer pgapi'),
      'weight'          => 2,
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_LOCAL_TASK,
  );
  /*
  $items['admin/config/pgapi/gateway_settings/webmoney/example/%'] = array(
      'title'           => 'Example',
      'page callback'   => 'pg_webmoney_example',
      'page arguments'  => array(6),
      'access callback' => 'user_access',
      'access arguments' => array('administer pgapi'),
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_CALLBACK,
  );

  $items['admin/config/pgapi/gateway_settings/webmoney/edit/%'] = array(
      'title'           => 'Edit Purse',
      'page callback'   => 'drupal_get_form',
      'page arguments'  => array('pg_webmoney_edit',6),
      'access callback' => 'user_access',
      'access arguments' => array('administer pgapi'),
      'file'            => 'pg_webmoney.admin.inc',
      'type'            => MENU_CALLBACK,
  );*/
  return $items;
}

/*
 * Pgapi Gateway Hooks
 */
 
function pg_webmoney_pgapi_gw($op,$a3=NULL,$a4=NULL){
  switch($op){
    case 'display name':
        $ret = t('Webmoney Payment Gateway');
      break;
    case 'payment page':
        $ret = url('payment/webmoney/'.$a3 ,array('absolute' => TRUE));
      break;
    case 'payment gateway info':
        $ret['name']=theme('image', array('path' => drupal_get_path('module','pg_webmoney').'/webmoney.png', 'alt' => t('Webmoney'), 'title' => t('Webmoney')));
        $result = db_query('SELECT * FROM {pg_webmoney_rates} ORDER BY type');
        while ($rr = db_fetch_object($result)){
        	$prices[$rr->type] = round(($a3*$rr->rate),2);
        }
        $ret['price']= $prices;
      break;        
    case 'process form':
        $form_result = $a4;
        $t = $a3;
        $ret = pg_webmoney_form($form_result,$t);
      break;
    case 'get form':
        $t=$a3;
        $form_result = $a4;
        $ret = pg_webmoney_extraform($form_result,$t);
      break;        

  }
  return $ret;
}

function pg_webmoney_pgapi_transaction($status,&$t){
  switch($status){
    case PG_PENDING:
        $result = db_query('SELECT * FROM {pg_webmoney_rates} ORDER BY type');
        while ($rr = db_fetch_object($result)){
          $prices[$rr->type] = round(($t->amount*$rr->rate), 2);
        }
        $t->extra['prices'] =  $prices;
      break;
  }
}

/********************************************************************
 * Other Functions
 ********************************************************************/
function pg_webmoney_extraform($form_state,$t) {
$result = db_query('SELECT * FROM {pg_webmoney_rates} ORDER BY type');
  $first=true;
  while ($template = db_fetch_object($result)){
     if($first){
       $first=false;
       $def_purse=$template->type;
     }
     $purses[$template->type]=round(($t->amount * $template->rate),2)." ".$template->type;
  }//while

  $form['wallet'] = array(
        '#type' => 'select',
        '#title' => t("Wallet type"),
        '#options' => $purses,
        '#default_value' => $def_purse,
      );  
  return $form;    
}



function pg_webmoney_form($form_result,$t){
  $output = drupal_get_form('pg_webmoney_payform',$form_result,$t);
  $output = str_ireplace('accept-charset="UTF-8"','accept-charset="cp1251"',$output);
  $t->method='pg_webmoney';
  pgapi_transaction_save($t);
//  echo '<html><body>'.$output.'</body>';
  echo '<html><body>'.$output.'<script>pgpayform.submit();</script></body>';
  exit();
}

 
function pg_webmoney_payform($form_state,$post,$t) {
  global $user;
  $wallet = db_fetch_object(db_query('SELECT * FROM {pg_webmoney_rates} where type="%s"',$post['wallet']));
  $form['LMI_PAYEE_PURSE'] = array(
        '#type' => 'hidden',
        '#value' => $wallet->purse,
      );
  $form['LMI_PAYMENT_NO'] = array(
    '#type' => 'hidden',
    '#value' => $t->txnid,
  );

  $form['LMI_PAYMENT_DESC'] = array(
    '#type' => 'hidden',
    '#default_value' => $t->title,
  );

  $form['LMI_PAYMENT_AMOUNT'] = array(
    '#type' => 'hidden',
    '#default_value' => round(($t->amount * $wallet->rate),2),
  );
  $form['#attributes'] = array('name' => 'pgpayform');
  $form['#action'] = cWebMoneyPayActionUrl;
  return $form;
}


/*
 * Functions theme
 */

function theme_pg_webmoney_list(&$form){
  $header = array(
    theme('table_select_header_cell'),
    t('WMType'),
    t('Purse'),
    t('Secret key'),
    t('Rate'),
    ''
  );

  foreach (element_children($form) as $key) {
    $row = array();

    if (is_array($form[$key]['purse'])) {
      $row[] = drupal_render($form['check'][$key]);
      $row[] = drupal_render($form[$key]['edit']);
      $row[] = drupal_render($form[$key]['purse']);
      $row[] = drupal_render($form[$key]['secret_key']);
      $row[] = drupal_render($form[$key]['rate']);
      $row[] = drupal_render($form[$key]['configure']);

      $rows[] = $row;
    }
  }
  $output = theme('table', $header, $rows);
  $output .= drupal_render($form);
  return $output;
}

